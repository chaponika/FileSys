Index: FileSys/Controllers/PathController.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>using System;\r\nusing System.Collections.Generic;\r\nusing System.Collections.Specialized;\r\nusing System.Drawing;\r\nusing System.IO;\r\nusing FileSys.Models;\r\nusing Microsoft.AspNetCore.Mvc;\r\n\r\n\r\nnamespace FileSys.Controllers\r\n{\r\n    public class PathController : Controller\r\n    {\r\n        private static readonly string[] imageFileTypesArray = new string[]{\".bmp\",\".jpg\",\".jpeg\",\".tif\", \".tiff\",\".png\"};\r\n        private static readonly HashSet<string> imageTypes = new HashSet<string>(imageFileTypesArray);\r\n\r\n        [HttpGet(\"{*path}\")]\r\n        public IActionResult displayFilesView(string path)\r\n        {\r\n            if (path.LastIndexOf(\".\") != -1 && imageTypes.Contains(path.Substring(path.LastIndexOf(\".\"))))\r\n            {\r\n                return RedirectToAction(\"DisplayImageView\",new{path = path});\r\n            }\r\n\r\n            try\r\n            {\r\n                DirectoryInfo dirInfo = new DirectoryInfo(path);\r\n                FileInfo[] files = dirInfo.GetFiles(\"*.*\");\r\n                DirectoryInfo[] dirInfos = dirInfo.GetDirectories(\"*.*\");\r\n\r\n                FilesModel[] filesmodels = new FilesModel[dirInfos.Length + files.Length];\r\n                for (int i = 0; i < dirInfos.Length; i++)\r\n                {\r\n                    /*FilesModel temp = new FilesModel();\r\n                    temp.isFolder = true;\r\n                    temp.name = dirInfos[i].Name;\r\n                    temp.path = dirInfos[i].FullName;\r\n                    filesmodels[i] = temp;*/\r\n                    filesmodels[i] = new FilesModel(dirInfos, i);\r\n                    filesmodels[i].Icon =  @\"wwwroot\\Images\\folder-icon.png\";\r\n                }\r\n\r\n                string[] filePaths = Directory.GetFiles(path);\r\n                for (int i=0; i <files.Length; i++)\r\n                {\r\n                    var file = files[i];\r\n                    filesmodels[dirInfos.Length + i] = new FilesModel();\r\n                    System.Drawing.Icon iconForFile = System.Drawing.Icon.ExtractAssociatedIcon(file.FullName);\r\n\r\n                    filesmodels[dirInfos.Length+i].name = file.Name;\r\n                    filesmodels[dirInfos.Length+i].path = file.FullName;\r\n                    filesmodels[dirInfos.Length+i].isFolder = false;\r\n                    Image image = iconForFile.ToBitmap();\r\n                    \r\n                    if (filesmodels[dirInfos.Length+i].path.Substring(filesmodels[dirInfos.Length+i].path.LastIndexOf(\".\")).Equals(\".txt\"))\r\n                    {\r\n                        filesmodels[dirInfos.Length+i].Icon = @\"wwwroot\\Images\\txt-file-icon.png\";\r\n                    }else if (imageTypes.Contains(filesmodels[dirInfos.Length+i].path.Substring(filesmodels[dirInfos.Length+i].path.LastIndexOf(\".\"))))\r\n                    {\r\n                        filesmodels[dirInfos.Length+i].Icon = @\"wwwroot\\Images\\txt-file-icon.png\";\r\n                    }\r\n                    else\r\n                    {\r\n                        filesmodels[dirInfos.Length+i].Icon = \"favicon.ico\";\r\n                    }\r\n\r\n                    //Console.WriteLine(filesmodels[dirInfos.Length+i].name);\r\n                }\r\n                Console.WriteLine(\"-----------\");\r\n                return View(filesmodels);\r\n\r\n            }\r\n            //UnauthorizedAccessException\r\n            catch (UnauthorizedAccessException e)\r\n            {\r\n                Console.WriteLine(\"you shall not pass here\");\r\n            }\r\n            return displayFilesView(path.Substring(0,path.LastIndexOf(@\"/\")));\r\n        }\r\n\r\n        [HttpGet]\r\n        public FileContentResult imageGenerate(string filePath)\r\n        {\r\n            System.Drawing.Icon iconForFile = System.Drawing.Icon.ExtractAssociatedIcon(filePath);\r\n            Bitmap b = iconForFile.ToBitmap();\r\n            ImageConverter converter = new ImageConverter();\r\n            return new FileContentResult((byte[])converter.ConvertTo(b, typeof(byte[])), \"image/png\");\r\n        }\r\n\r\n        [HttpGet]\r\n        public IActionResult DisplayImageView(string path)\r\n        {\r\n            ViewBag.Imagepath = path;\r\n            return View();\r\n        }\r\n    }\r\n}
===================================================================
diff --git a/FileSys/Controllers/PathController.cs b/FileSys/Controllers/PathController.cs
--- a/FileSys/Controllers/PathController.cs	
+++ b/FileSys/Controllers/PathController.cs	
@@ -63,7 +63,6 @@
                     {
                         filesmodels[dirInfos.Length+i].Icon = "favicon.ico";
                     }
-
                     //Console.WriteLine(filesmodels[dirInfos.Length+i].name);
                 }
                 Console.WriteLine("-----------");
